% =========================================================================
% CYBERPUNK THEME for Plotting (FINAL - Re-Commented)
% Version: FINAL 1.0
%
% Description:
%   Defines a MATLAB structure containing color codes, line styles, font properties,
%   and other visual settings designed to create a "cyberpunk" aesthetic for
%   plots generated by the simulation visualization tools.
%
% Usage:
%   Called by visualization functions (e.g., `visualization_model.m`,
%   `tactical_replay_mode.m`) when `config.visualization.PLOT_STYLE` is set
%   to 'cyberpunk'. The returned `theme` structure fields are then used to set
%   figure, axes, line, marker, and text properties.
%
% Customization:
%   Modify the color hex codes, line widths, font names, etc., within this
%   function to customize the cyberpunk look and feel. Ensure that any field
%   names referenced by the plotting functions exist in this structure.
%
% Maintainer: [Your Name/Team]
% Last Updated: [Date - e.g., 2025-04-04]
% =========================================================================
function theme = cyberpunk_theme()

    theme = struct(); % Initialize the output structure

    % --- Base Colors (Often dark backgrounds with bright highlights) ---
    theme.bgColor       = [0.05, 0.05, 0.1]; % Dark navy/purple figure background
    theme.axesColor     = [0.1, 0.1, 0.2];  % Slightly lighter axes background/panel color
    theme.gridColor     = [0.3, 0.3, 0.4, 0.5]; % Dim grid lines (RGBA for alpha transparency)
    theme.axesTickColor = [0.8, 0.8, 1.0];  % Bright, light cyan/magenta for axes lines, ticks
    theme.textColor     = [0.9, 0.9, 0.9];  % General text (slightly off-white for readability)
    theme.textColorEmphasis = [1.0, 0.8, 0.0]; % Emphasis text (e.g., annotations) - Yellow/Gold
    theme.titleColor    = [0.8, 0.5, 1.0];  % Plot title color (e.g., Magenta/Purple)
    theme.labelColor    = [0.6, 0.8, 1.0];  % Axis label color (e.g., Cyan/Blue)

    % --- Line Colors ---
    % Define a sequence of vibrant colors for plotting multiple lines (e.g., different links)
    % Using bright, distinct "neon" colors.
    theme.lineColors = {
        [0.0, 1.0, 1.0],  % Cyan
        [1.0, 0.0, 1.0],  % Magenta
        [0.0, 1.0, 0.0],  % Bright Green / Lime
        [1.0, 0.5, 0.0],  % Orange
        [1.0, 1.0, 0.0],  % Yellow
        [0.5, 0.5, 1.0],  % Light Blue / Indigo
        [1.0, 0.8, 0.8]   % Light Pink/Red
        % Add more colors if needed for plots with many lines
        };
    theme.highlightColor = theme.lineColors{5}; % Yellow often works well as a default highlight
    theme.linkColors     = theme.lineColors; % Use the same color cycle for RF link lines

    % --- Marker Colors ---
    % Define specific colors for different types of markers on plots.
    theme.markerColorStart        = [0.0, 1.0, 0.0];  % Bright Green for trajectory start
    theme.markerColorEnd          = [1.0, 0.2, 0.2];  % Bright Red for trajectory end
    theme.markerColorWaypoint     = [1.0, 0.0, 1.0];  % Magenta for waypoints
    theme.markerColorGroundStation= [0.0, 1.0, 1.0];  % Cyan for ground stations

    % --- Status & Other Plot Element Colors ---
    % Define colors used for indicating status or specific plot elements.
    theme.statusOkColor      = [0.1, 0.8, 0.1]; % Greenish for 'OK' status bars/rays
    theme.statusFailColor    = [0.8, 0.1, 0.1]; % Reddish for 'FAIL' status (e.g., Terrain block, Low Sig)
    theme.statusWarnColor    = [1.0, 0.7, 0.0]; % Orange/Yellow for 'Warning' status (e.g., Aircraft Masked)
    theme.statusUnknownColor = [0.5, 0.5, 0.5]; % Gray for unknown or skipped status
    theme.barColor           = [0.2, 0.6, 1.0]; % Color for bar charts (e.g., availability)
    theme.terrainColormap    = 'cool';          % MATLAB Colormap name for terrain surface ('cool', 'parula', 'jet', 'hot', 'gray')
    theme.terrainFlatColor   = [0.2, 0.25, 0.3];% Dull color if terrain is plotted as flat (Patch 4 fix)
    theme.snrColormap        = 'parula';        % Default colormap for SNR plots (defined in config)

    % --- Line & Marker Styles ---
    theme.lineWidth         = 1.5; % Default line width (can be overridden by config)
    theme.markerSize        = 6;   % Default marker size (can be overridden by config)
    theme.terrainAlpha      = 0.6; % Transparency for terrain surface (0=invisible, 1=opaque)
    % Add other styles if needed (e.g., theme.lineStyle = '--'; theme.marker = 'o';)

    % --- Font ---
    % Try a monospaced font often associated with cyberpunk themes.
    theme.fontName = 'Consolas';
    % Check if the font is available, otherwise fallback to a common monospaced font.
    try
        font_list = listfonts; % Get available system fonts
        if ~ismember(theme.fontName, font_list)
            theme.fontName = 'Courier New'; % Common fallback
             if ~ismember(theme.fontName, font_list)
                 theme.fontName = 'FixedWidth'; % MATLAB generic fixed width
             end
        end
    catch
        theme.fontName = 'Courier New'; % Fallback on error
    end
    theme.fontSize = 10; % Default font size

    fprintf('Cyberpunk theme loaded (Font: %s).\n', theme.fontName);

end % END OF FUNCTION cyberpunk_theme